variant: fcos
version: 1.0.0
passwd:
  users:
    - name: core
      password_hash: $y$j9T$sKQu3acPZZKvvu0AdGgcs/$jjeX14lru1NOIdy3fmZAUnCNZeEhIOS2m5ahrVteJw1
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBrCBG7HfOvjIjzLdddVNns4nibDLV6DnVMhPSXUmm/j rokoucha@Minna
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH7UtJAib9hokde1hbfySbqUe+VhGlEMSaM5IrTLKSo4 rokoucha@sanya
storage:
  disks:
    - device: /dev/sdb
      wipe_table: true
      partitions:
        - label: podman
          number: 1
          size_mib: 32768
        - label: home
          number: 0
  files:
    - path: /etc/selinux/config
      contents:
        inline: |
          SELINUX=disabled
          SELINUXTYPE=targeted
      mode: 0664
      overwrite: true
    - path: /etc/NetworkManager/system-connections/eth0.nmconnection
      contents:
        inline: |
          [connection]
          interface-name=eth0
          type=ethernet

          [ipv4]
          addresses=10.0.1.5
          dns=10.0.1.1;1.1.1.1
          gateway=10.0.1.1
          method=manual

          [ipv6]
          method=auto
      mode: 0600
      overwrite: true
    - path: /opt/open-vm-tools/Dockerfile
      contents:
        inline: |
          FROM fedora:32

          RUN dnf install \
            --setopt=install_weak_deps=False \
            --setopt=override_install_langs=en_US.utf8 \
            --setopt=tsflags=nodocs \
            -y \
            open-vm-tools \
            && dnf clean all

          CMD /usr/bin/vmtoolsd
      mode: 0644
      overwrite: true
  filesystems:
    - path: /var/home
      device: /dev/disk/by-partlabel/home
      format: xfs
    - path: /var/lib/containers
      device: /dev/disk/by-partlabel/podman
      format: xfs
systemd:
  units:
    - name: var-home.mount
      enabled: true
      contents: |
        [Unit]
        Before=local-fs.target

        [Mount]
        What=/dev/disk/by-partlabel/home
        Where=/var/home

        [Install]
        WantedBy=local-fs.target
    - name: var-lib-containers.mount
      enabled: true
      contents: |
        [Unit]
        Description=Mount Podman directory
        Before=local-fs.target

        [Mount]
        What=/dev/disk/by-partlabel/podman
        Where=/var/lib/containers

        [Install]
        WantedBy=local-fs.target
    - name: set-hostname.service
      enabled: true
      contents: |
        [Unit]
        After=network-online.target
        Description=Set hostname with hostnamectl
        Wants=network-online.target

        [Service]
        ExecStart=/usr/bin/hostnamectl set-hostname tomoko
        RemainAfterExit=yes
        Type=oneshot

        [Install]
        WantedBy=multi-user.target
    - name: vmtoolsd.service
      enabled: true
      contents: |
        [Unit]
        After=network-online.target
        ConditionVirtualization=vmware
        Description=Open Virtual Machine Tools (VMware Tools)
        Wants=network-online.target

        [Service]
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/podman kill vmtoolsd
        ExecStartPre=-/usr/bin/podman rm vmtoolsd
        ExecStartPre=/usr/bin/podman build -t open-vm-tools /opt/open-vm-tools
        ExecStart=/usr/bin/podman run \
          --ipc=host \
          --name vmtoolsd \
          --net=host \
          --pid=host \
          --privileged \
          --rm \
          --uts=host \
          -e SYSTEMD_IGNORE_CHROOT=1 \
          -v /proc/:/hostproc/ \
          -v /run/systemd:/run/systemd \
          -v /sys/fs/cgroup:/sys/fs/cgroup \
          open-vm-tools
        KillMode=none
        Type=simple

        [Install]
        WantedBy=multi-user.target
    - name: setup-cockpit.service
      enabled: true
      contents: |
        [Unit]
        After=multi-user.target
        After=network-online.target
        Before=boot-complete.target
        ConditionFirstBoot=yes
        Description=Setup cockpit
        Wants=network-online.target

        [Service]
        ExecStartPre=/usr/bin/rpm-ostree install cockpit-system cockpit-ostree cockpit-podman cockpit-networkmanager
        ExecStartPre=/usr/bin/rpm-ostree ex livefs --i-like-danger
        ExecStartPre=/usr/bin/podman pull cockpit/ws
        ExecStartPre=/usr/bin/podman container runlabel --name cockpit-ws RUN cockpit/ws
        ExecStartPre=/usr/bin/podman container runlabel INSTALL cockpit/ws cockpit/ws
        ExecStart=/usr/bin/systemctl enable --now cockpit.service
        Type=oneshot

        [Install]
        RequiredBy=boot-complete.target
        WantedBy=multi-user.target
