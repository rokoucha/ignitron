variant: fcos
version: 1.4.0
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIoDIaHvFkzwAkNdUKZ8TkepQuAsluZc5Y4UhWCAlBuU rokoucha@eila
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBg3QtWq4C1hTVWM2f198s7+9wftrLMhYJiEwtgCfN4o core@tomoko
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEto28bqf5JfCGMehpMYk4IFKLOo09ckd800shUJdN4S iPad-mini-6
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKBsd257k7iyaXxKRT1AE30hAF6DrF7jPNcsVgWqTake iPhone-12-mini
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMayjSB1G1n6nF09SvjIsxb9uT6LnEOByAvtYgGFnq8q rokoucha@shizuka
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMHvlECEoD+4U7EgHI+ZOW+RkprpzedVaiv/1gmBlwak user@sanya.local
storage:
  files:
    - path: /etc/selinux/config
      contents:
        inline: |
          SELINUX=permissive
          SELINUXTYPE=targeted
      mode: 0664
      overwrite: true
    - path: /opt/open-vm-tools/Dockerfile
      contents:
        inline: |
          FROM registry.fedoraproject.org/fedora:37

          RUN echo -e "fastestmirror=True\nmax_parallel_downloads=10" >> /etc/dnf/dnf.conf

          RUN dnf install \
            --setopt=install_weak_deps=False \
            --setopt=tsflags=nodocs \
            -y \
            open-vm-tools \
            && dnf clean all

          ENTRYPOINT ["/usr/bin/vmtoolsd"]
      mode: 0644
    - path: /var/lib/systemd/linger/core
      mode: 0644
    - path: /var/home/core/.env/cloudflare-ddns.env
      contents:
        local: .env/cloudflare-ddns.env
      mode: 0600
      user:
        name: core
      group:
        name: core
    - path: /var/home/core/.env/mackerel-agent.env
      contents:
        local: .env/mackerel-agent.env
      mode: 0600
      user:
        name: core
      group:
        name: core
  links:
    - path: /etc/localtime
      target: /usr/share/zoneinfo/Asia/Tokyo
systemd:
  units:
    - name: nftables.service
      enabled: true
    - name: vmtoolsd.service
      enabled: true
      contents: |
        # container-e7dd5c943b947a6a7e8dcbd67a01e70856f94f639d0edf0336248c8c776cedff.service
        # autogenerated by Podman 4.2.0
        # Mon Oct 10 01:08:55 JST 2022

        [Unit]
        ConditionVirtualization=vmware
        Description=Open Virtual Machine Tools (VMware Tools)
        Documentation=man:podman-generate-systemd(1)
        Wants=network-online.target
        After=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStartPre=/usr/bin/podman build --network host -t open-vm-tools /opt/open-vm-tools
        ExecStartPre=/bin/rm -f %t/%n.ctr-id
        ExecStart=/usr/bin/podman run \
            --cgroups=no-conmon \
            --cidfile=%t/%n.ctr-id \
            --detach \
            --env SYSTEMD_IGNORE_CHROOT=1 \
            --ipc=host \
            --name=vmtoolsd \
            --net=host \
            --pid=host \
            --privileged \
            --replace \
            --rm \
            --sdnotify=conmon \
            --uts=host \
            --volume=/proc/:/hostproc/ \
            --volume=/run/systemd:/run/systemd \
            --volume=/sys/fs/cgroup:/sys/fs/cgroup \
            open-vm-tools
        ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm -f --ignore --cidfile=%t/%n.ctr-id
        Type=notify
        NotifyAccess=all

        [Install]
        WantedBy=default.target
    - name: add-cloudflare-dns-record.service
      enabled: true
      contents: |
        [Unit]
        Description=Add cloudflare dns record
        Wants=network-online.target
        After=network-online.target systemd-machine-id-commit.service
        ConditionPathExists=!/var/lib/add-cloudflare-dns-record.stamp

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStartPre=/bin/rm -f %t/%n.ctr-id
        ExecStart=/usr/bin/podman run \
            --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            --detach \
            --replace \
            --name=cloudflare-ddns \
            --net=host \
            --env-file /var/home/core/.env/cloudflare-ddns.env \
            ghcr.io/rokoucha/cloudflare-ddns:latest \
            --hostname=%H \
            --subdomain=dns \
            ggrel.net
        ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm -f --ignore --cidfile=%t/%n.ctr-id
        Type=notify
        NotifyAccess=all

        [Install]
        WantedBy=default.target
    - name: mackerel-agent.service
      enabled: true
      contents: |
        # container-mackerel-agent.service
        # autogenerated by Podman 4.3.1
        # Fri Feb  3 21:47:59 JST 2023

        [Unit]
        Description=Podman container-mackerel-agent.service
        Documentation=man:podman-generate-systemd(1)
        Wants=network-online.target
        After=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        ExecStart=/usr/bin/podman run \
            --cgroups=no-conmon \
            --cidfile=%t/%n.ctr-id \
            --detach \
            --env-file /var/home/core/.env/mackerel-agent.env \
            --hostname %H \
            --ipc host \
            --name mackerel-agent \
            --network host \
            --pid host \
            --replace \
            --rm \
            --sdnotify=conmon \
            --volume mackerel-agent:/var/lib/mackerel-agent/ \
            docker.io/mackerel/mackerel-agent:0.75.1
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        Type=notify
        NotifyAccess=all

        [Install]
        WantedBy=default.target
    - name: node_exporter.service
      enabled: true
      contents: |
        [Unit]
        Description=Exporter for machine metrics.
        Documentation=man:podman-generate-systemd(1)
        Wants=network-online.target
        After=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStartPre=/bin/rm -f %t/%n.ctr-id
        ExecStart=/usr/bin/podman run \
            --cgroups=no-conmon \
            --cidfile=%t/%n.ctr-id \
            --detach \
            --name node_exporter \
            --net host \
            --pid host \
            --publish 9100:9100 \
            --replace \
            --rm \
            --sdnotify=conmon \
            --volume /:/host:ro,rslave \
            --volume /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket \
            docker.io/prom/node-exporter:v1.5.0 \
            --collector.processes \
            --collector.systemd \
            --path.rootfs=/host
        ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm -f --ignore --cidfile=%t/%n.ctr-id
        Type=notify
        NotifyAccess=all

        [Install]
        WantedBy=default.target
