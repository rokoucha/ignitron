variant: fcos
version: 1.4.0
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAuAojntg2c+/nbfeRG6jYtRxKJiIiQhI7VTOXGAgjz1 rokoucha@eila
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMayjSB1G1n6nF09SvjIsxb9uT6LnEOByAvtYgGFnq8q rokoucha@shizuka
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMHvlECEoD+4U7EgHI+ZOW+RkprpzedVaiv/1gmBlwak user@sanya.local
storage:
  disks:
    - device: /dev/sdb
      wipe_table: true
      partitions:
        - label: home
          number: 0
  files:
    - path: /etc/hostname
      overwrite: true
      mode: 0644
      contents:
        inline: tomoko
    - path: /etc/selinux/config
      contents:
        inline: |
          SELINUX=permissive
          SELINUXTYPE=targeted
      mode: 0664
      overwrite: true
    - path: /etc/NetworkManager/system-connections/eth0.nmconnection
      contents:
        inline: |
          [connection]
          interface-name=ens192
          type=ethernet

          [ipv4]
          addresses=172.16.2.11
          dns=172.16.2.1;1.1.1.1
          gateway=172.16.2.1
          method=manual

          [ipv6]
          method=auto
      mode: 0600
      overwrite: true
    - path: /etc/sysconfig/nftables.conf
      contents:
        inline: |
          #
          # This file will contain your nftables rules and
          # is read by the systemd service when restarting
          #
          # These provide an iptables like set of filters
          # (uncomment to include)
          # include "/etc/nftables/arp-filter.nft"
          # include "/etc/nftables/bridge-filter.nft"
          # include "/etc/nftables/inet-filter.nft"
          # include "/etc/nftables/ipv4-filter.nft"
          # include "/etc/nftables/ipv4-mangle.nft"
          # include "/etc/nftables/ipv4-nat.nft"
          # include "/etc/nftables/ipv4-raw.nft"
          # include "/etc/nftables/ipv6-filter.nft"
          # include "/etc/nftables/ipv6-mangle.nft"
          # include "/etc/nftables/ipv6-nat.nft"
          # include "/etc/nftables/ipv6-raw.nft"
          flush ruleset;

          table inet filter {
            chain input {
              type filter hook input priority 0; policy drop;

              ct state { established, related } accept;
              ct state invalid drop;

              iif lo accept;

              ip6 nexthdr icmpv6 icmpv6 type { destination-unreachable, packet-too-big, time-exceeded, parameter-problem, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert } accept;
              ip protocol icmp icmp type { destination-unreachable, router-advertisement, time-exceeded, parameter-problem } accept;

              ip6 nexthdr icmpv6 icmpv6 type echo-request limit rate 10/second accept;
              ip protocol icmp icmp type echo-request limit rate 10/second accept;

              # Allow SSH
              tcp dport ssh limit rate 15/minute accept;

              # Allow HTTP and HTTPS
              tcp dport { http, https } accept;

              # Allow TeamSpeak
              tcp dport { 10011, 30033 } accept;
              udp dport 9987 accept;

              # Allow Minecraft
              tcp dport { 25565, 25567 } accept;

              # Allow iperf3
              tcp dport 5201 accept;

              # Allow InfluxDB
              tcp dport 8086 accept;
            }
          }
      mode: 0600
      overwrite: true
    - path: /etc/sysctl.d/50-forward.conf
      contents:
        inline: |
          net.ipv4.ip_forward = 1
          net.ipv6.conf.all.forwarding = 1
      mode: 0644
    - path: /opt/open-vm-tools/Dockerfile
      contents:
        inline: |
          FROM registry.fedoraproject.org/fedora:36

          RUN echo -e "fastestmirror=True\nmax_parallel_downloads=10" >> /etc/dnf/dnf.conf

          RUN dnf install \
            --setopt=install_weak_deps=False \
            --setopt=tsflags=nodocs \
            -y \
            open-vm-tools \
            && dnf clean all

          ENTRYPOINT ["/usr/bin/vmtoolsd"]
      mode: 0644
    - path: /var/lib/systemd/linger/core
      mode: 0644
    - path: /var/home/core/.env
      contents:
        local: .env
      mode: 0600
  filesystems:
    - path: /var/home
      device: /dev/disk/by-partlabel/home
      format: xfs
  links:
    - path: /etc/localtime
      target: /usr/share/zoneinfo/Asia/Tokyo
systemd:
  units:
    - name: var-home.mount
      enabled: true
      contents: |
        [Unit]
        Before=local-fs.target

        [Mount]
        What=/dev/disk/by-partlabel/home
        Where=/var/home

        [Install]
        WantedBy=local-fs.target
    - name: nftables.service
      enabled: true
    - name: vmtoolsd.service
      enabled: true
      contents: |
        # container-e7dd5c943b947a6a7e8dcbd67a01e70856f94f639d0edf0336248c8c776cedff.service
        # autogenerated by Podman 4.2.0
        # Mon Oct 10 01:08:55 JST 2022

        [Unit]
        ConditionVirtualization=vmware
        Description=Open Virtual Machine Tools (VMware Tools)
        Documentation=man:podman-generate-systemd(1)
        Wants=network-online.target
        After=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStartPre=/usr/bin/podman build --network host -t open-vm-tools /opt/open-vm-tools
        ExecStartPre=/bin/rm -f %t/%n.ctr-id
        ExecStart=/usr/bin/podman run \
            --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            --detach \
            --replace \
            --ipc=host \
            --name=vmtoolsd \
            --net=host \
            --pid=host \
            --privileged \
            --uts=host \
            --env SYSTEMD_IGNORE_CHROOT=1 \
            --volume=/proc/:/hostproc/ \
            --volume=/run/systemd:/run/systemd \
            --volume=/sys/fs/cgroup:/sys/fs/cgroup \
            open-vm-tools
        ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm -f --ignore --cidfile=%t/%n.ctr-id
        Type=notify
        NotifyAccess=all

        [Install]
        WantedBy=default.target
    - name: add-cloudflare-dns-record.service
      enabled: true
      contents: |
        [Unit]
        Description=Add cloudflare dns record
        Wants=network-online.target
        After=network-online.target systemd-machine-id-commit.service
        ConditionPathExists=!/var/lib/add-cloudflare-dns-record.stamp

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStartPre=/bin/rm -f %t/%n.ctr-id
        ExecStart=/usr/bin/podman run \
            --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            --detach \
            --replace \
            --name=cloudflare-ddns \
            --net=host \
            --env-file /var/home/core/.env \
            ghcr.io/rokoucha/cloudflare-ddns:latest \
            --hostname=%H \
            --subdomain=luminous \
            ggrel.net
        ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm -f --ignore --cidfile=%t/%n.ctr-id
        Type=notify
        NotifyAccess=all

        [Install]
        WantedBy=default.target
